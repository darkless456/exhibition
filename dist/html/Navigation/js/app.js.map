{"version":3,"sources":["app.js"],"names":["$","creatColumn","waterfall","column_num","calculateColumns","html","i","setting","column_className","column_width","column_space","$container","prepend","num","Math","floor","innerWidth","render","elements","fadein","length","$columns","each","auto_imgHeight","insert_type","insert","eq","insert2","this","nodeName","toLowerCase","find","img_selector","image","Image","src","attr","onload","onreadystatechange","readyState","public_render","elems","$element","css","appendTo","calculateLowest","fadeTo","fadein_speed","min","outerHeight","min_key","getElements","load_index","getResource","onScroll","clearTimeout","_scrollTimer","setTimeout","$lowest_column","bottom","offset","top","scrollTop","document","documentElement","body","windowHeight","clientHeight","onResize","$cells","cell_selector","remove","index","fn","extend","opt","detach","_scrollTimer2","window","bind","_scrollTimer3","jQuery"],"mappings":"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","file":"app.js","sourcesContent":["(function($) {\n    var\n    //参数\n        setting = {\n            column_width: 210, //列宽\n            column_className: 'waterfall_column', //列的类名\n            column_space: 0, //列间距\n            cell_selector: '.box', //要排列的砖块的选择器，context为整个外部容器\n            img_selector: 'img', //要加载的图片的选择器\n            auto_imgHeight: true, //是否需要自动计算图片的高度\n            fadein: true, //是否渐显载入\n            fadein_speed: 600, //渐显速率，单位毫秒\n            insert_type: 1, //单元格插入方式，1为插入最短那列，2为按序轮流插入\n            getResource: function(index) {} //获取动态资源函数,必须返回一个砖块元素集合,传入参数为加载的次数\n                //  getResource:function(index,render){//index为已加载次数,render为渲染接口函数,接受一个dom集合或jquery对象作为参数。通过ajax等异步方法得到的数据可以传入该接口进行渲染，如 render(elem)\n                //     var html='';\n                //     for(var i=20*(index-1);i<20*(index-1)+20;i++){\n                //        var k='';\n                //        for(var ii=0;ii<3-i.toString().length;ii++){\n                //           k+='0';\n                //        }\n                //        k+=i;\n                //        var src=\"img/\"+k+\".jpg\";\n                //        var name=k;\n                //        html+='<a class=\"box\"><div class=\"content\"><img src=\"'+src+'\" /><h5>'+k+'</h5></div></a>';\n                //     }\n                //     return $(html);\n                // }\n                //\n        },\n        //\n        waterfall = $.waterfall = {}, //对外信息对象\n        $container = null; //容器\n        waterfall.load_index = 0, //加载次数\n        $.fn.extend({\n            waterfall: function(opt) {\n                opt = opt || {};\n                setting = $.extend(setting, opt);\n                $container = waterfall.$container = $(this);\n                waterfall.$columns = creatColumn();\n                render($(this).find(setting.cell_selector).detach(), false); //重排已存在元素时强制不渐显\n                waterfall._scrollTimer2 = null;\n                $(window).bind('scroll', function() {\n                    clearTimeout(waterfall._scrollTimer2);\n                    waterfall._scrollTimer2 = setTimeout(onScroll, 300);\n                });\n                waterfall._scrollTimer3 = null;\n                $(window).bind('resize', function() {\n                    clearTimeout(waterfall._scrollTimer3);\n                    waterfall._scrollTimer3 = setTimeout(onResize, 300);\n                });\n            }\n        });\n\n    function creatColumn() { //创建列\n        waterfall.column_num = calculateColumns(); //列数\n        //循环创建列\n        var html = '';\n        for(var i = 0; i < waterfall.column_num; i++) {\n            html += '<div class=\"' + setting.column_className + '\" style=\"width:' + setting.column_width + 'px; display:inline-block; *display:inline;zoom:1; margin-left:' + setting.column_space / 2 + 'px;margin-right:' + setting.column_space / 2 + 'px; vertical-align:top; overflow:hidden\"></div>';\n        }\n        $container.prepend(html); //插入列\n        return $('.' + setting.column_className, $container); //列集合\n    }\n\n    function calculateColumns() { //计算需要的列数\n        var num = Math.floor(($container.innerWidth()) / (setting.column_width + setting.column_space));\n        if(num < 1) {\n            num = 1;\n        } //保证至少有一列\n        return num;\n    }\n\n    function render(elements, fadein) { //渲染元素\n        if(!$(elements).length) return; //没有元素\n        var $columns = waterfall.$columns;\n        $(elements).each(function(i) {\n            if(!setting.auto_imgHeight || setting.insert_type == 2) { //如果给出了图片高度，或者是按顺序插入，则不必等图片加载完就能计算列的高度了\n                if(setting.insert_type == 1) {\n                    insert($(elements).eq(i), setting.fadein && fadein); //插入元素\n                } else if(setting.insert_type == 2) {\n                    insert2($(elements).eq(i), i, setting.fadein && fadein); //插入元素     \n                }\n                return true; //continue\n            }\n            if($(this)[0].nodeName.toLowerCase() == 'img' || $(this).find(setting.img_selector).length > 0) { //本身是图片或含有图片\n                var image = new Image;\n                var src = $(this)[0].nodeName.toLowerCase() == 'img' ? $(this).attr('src') : $(this).find(setting.img_selector).attr('src');\n                image.onload = function() { //图片加载后才能自动计算出尺寸\n                    image.onreadystatechange = null;\n                    if(setting.insert_type == 1) {\n                        insert($(elements).eq(i), setting.fadein && fadein); //插入元素\n                    } else if(setting.insert_type == 2) {\n                        insert2($(elements).eq(i), i, setting.fadein && fadein); //插入元素     \n                    }\n                    image = null;\n                }\n                image.onreadystatechange = function() { //处理IE等浏览器的缓存问题：图片缓存后不会再触发onload事件\n                    if(image.readyState == \"complete\") {\n                        image.onload = null;\n                        if(setting.insert_type == 1) {\n                            insert($(elements).eq(i), setting.fadein && fadein); //插入元素\n                        } else if(setting.insert_type == 2) {\n                            insert2($(elements).eq(i), i, setting.fadein && fadein); //插入元素     \n                        }\n                        image = null;\n                    }\n                }\n                image.src = src;\n            } else { //不用考虑图片加载\n                if(setting.insert_type == 1) {\n                    insert($(elements).eq(i), setting.fadein && fadein); //插入元素\n                } else if(setting.insert_type == 2) {\n                    insert2($(elements).eq(i), i, setting.fadein && fadein); //插入元素     \n                }\n            }\n        });\n    }\n\n    function public_render(elems) { //ajax得到元素的渲染接口\n        render(elems, true);\n    }\n\n    function insert($element, fadein) { //把元素插入最短列\n        if(fadein) { //渐显\n            $element.css('opacity', 0).appendTo(waterfall.$columns.eq(calculateLowest())).fadeTo(setting.fadein_speed, 1);\n        } else { //不渐显\n            $element.appendTo(waterfall.$columns.eq(calculateLowest()));\n        }\n    }\n\n    function insert2($element, i, fadein) { //按序轮流插入元素\n        if(fadein) { //渐显\n            $element.css('opacity', 0).appendTo(waterfall.$columns.eq(i % waterfall.column_num)).fadeTo(setting.fadein_speed, 1);\n        } else { //不渐显\n            $element.appendTo(waterfall.$columns.eq(i % waterfall.column_num));\n        }\n    }\n\n    function calculateLowest() { //计算最短的那列的索引\n        var min = waterfall.$columns.eq(0).outerHeight(),\n            min_key = 0;\n        waterfall.$columns.each(function(i) {\n            if($(this).outerHeight() < min) {\n                min = $(this).outerHeight();\n                min_key = i;\n            }\n        });\n        return min_key;\n    }\n\n    function getElements() { //获取资源\n        $.waterfall.load_index++;\n        return setting.getResource($.waterfall.load_index, public_render);\n    }\n    waterfall._scrollTimer = null; //延迟滚动加载计时器\n    function onScroll() { //滚动加载\n        clearTimeout(waterfall._scrollTimer);\n        waterfall._scrollTimer = setTimeout(function() {\n            var $lowest_column = waterfall.$columns.eq(calculateLowest()); //最短列\n            var bottom = $lowest_column.offset().top + $lowest_column.outerHeight(); //最短列底部距离浏览器窗口顶部的距离\n            var scrollTop = document.documentElement.scrollTop || document.body.scrollTop || 0; //滚动条距离\n            var windowHeight = document.documentElement.clientHeight || document.body.clientHeight || 0; //窗口高度\n            if(scrollTop >= bottom - windowHeight) {\n                render(getElements(), true);\n            }\n        }, 100);\n    }\n\n    function onResize() { //窗口缩放时重新排列\n        if(calculateColumns() == waterfall.column_num) return; //列数未改变，不需要重排\n        var $cells = waterfall.$container.find(setting.cell_selector);\n        waterfall.$columns.remove();\n        waterfall.$columns = creatColumn();\n        render($cells, false); //重排已有元素时强制不渐显\n    }\n})(jQuery);\n\n"],"sourceRoot":"/source/"}